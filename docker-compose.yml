version: "3.8"

services:
  python:
    container_name: "${COMPOSE_PROJECT_NAME}_python"
    build:
      context: .
      dockerfile: containers/python/Dockerfile
    volumes:
      - ./app:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${COMPOSE_PROJECT_NAME}
      - POSTGRES_HOST=${DOCKER_DB_HOST_IP}
    ports:
      - "8000:8000"
    networks:
      - net
    depends_on:
      - postgres

  postgres:
    container_name: "${COMPOSE_PROJECT_NAME}_postgres"
    image: postgres:15.0-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${COMPOSE_PROJECT_NAME}
    ports:
      - 5432:5432
#    volumes:
#      - ./backup/postgres:/var/lib/postgresql/backup:cached
    networks:
      net:
        ipv4_address: ${DOCKER_DB_HOST_IP}

  pgadmin:
    container_name: "${COMPOSE_PROJECT_NAME}_pgadmin"
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - net
    depends_on:
      - postgres

  node:
    build:
      context: ./containers/node
      dockerfile: Dockerfile
    container_name: "${COMPOSE_PROJECT_NAME}_node"
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/:/app/react-app
    networks:
      - net


networks:
  net:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400
    ipam:
      config:
        - subnet: 173.20.0.0/16